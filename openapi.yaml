openapi: 3.0.1
info:
  termsOfService: http://www.jelli.com/terms/
  contact:
    email: info@jelli.com
  license:
    name: proprietary
  version: "1.0"
servers:
- url: /api
  variables: {}
tags:
- name: envmgrs
  description: Sample controller
- name: projectdata
  description: Project Data controller
paths:
  /v1/envmgrs:
    get:
      tags:
      - envmgrs
      summary: Sample GET
      operationId: envmgr
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: string
  /v1/projectdata/{project_key}:
    get:
      tags:
      - projectdata
      summary: get project data
      operationId: getProjectData
      parameters:
      - name: project_key
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
  /v1/projectdata:
    post:
      tags:
      - projectdata
      summary: Upsert project data
      operationId: upsertProjectData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectDataEO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDataEO'
  /application.wadl:
    get:
      operationId: getWadl
      responses:
        default:
          description: default response
          content:
            application/vnd.sun.wadl+xml: {}
            application/xml: {}
  /application.wadl/{path}:
    get:
      operationId: getExternalGrammar
      parameters:
      - name: path
        in: path
        required: true
        schema:
          type: string
      responses:
        default:
          description: default response
          content:
            application/xml: {}
components:
  schemas:
    ObjectId:
      type: object
      properties:
        timestamp:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
    ProjectDataEO:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        projectKey:
          type: string
        friendlyName:
          type: string
        backendVersionEndpoint:
          type: string
        defaultLinkPattern:
          type: string
        linkOverrides:
          type: object
          additionalProperties:
            type: string
        deploymentMetadata:
          type: object
          additionalProperties:
            type: string
        onEnvDashboard:
          type: boolean
        landingEndpoint:
          type: string
        microserviceName:
          type: string
