{"version":3,"sources":["jelli/hackday_environ_manager/project_management/views.cljs"],"mappings":"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","names":["jelli.hackday-environ-manager.project-management.views/project-deploy-link","project","deployable-project-keys","re_frame.core.subscribe","cljs.core/contains?","cljs.core/deref","cljs.core/set","re-frame.core/dispatch","jelli.hackday-environ-manager.project-management.views/project-env-links","env-keys","project-datum","iter__4611__auto__","s__71255","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__71257","cljs.core/chunk-buffer","i__71256","vec__71264","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__71254","cljs.core/chunk-rest","vec__71267","cljs.core/first","cljs.core/cons","cljs.core/rest","env","base-link","cljs.core.map","p1__71249#","cljs.core.juxt","cljs.core/identity","jelli.hackday-environ-manager.db/get-link","link","jelli.hackday-environ-manager.simple-interop/new-tab-href","p__71271","vec__71273","jelli.hackday-environ-manager.project-management.views/matches-search?","term","project-key","lower-term","clojure.string/lower-case","cljs.core/name","cljs.core.remove","cljs.core/nil?","p1__71270#","cljs.core/some","clojure.string/includes?","jelli.hackday-environ-manager.project-management.views/project-list-page","with-let71285","reagent.ratom/with-let-values","temp__5757__auto__","reagent.ratom/*ratom-context*","c__50045__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init71286","cljs.core/not","res71287","reagent.core.atom","p1__71279#","p1__71280#","project-data","filtered-projects","p1__71278#","cljs.core.filter","cljs.core/reset!","jelli.hackday-environ-manager.simple-interop/event->value","clojure.string/blank?","cljs.core.doall","s__71295","b__71297","i__71296","vec__71303","iter__71294","vec__71306","k","data","js/JSON","cljs.core/clj->js","jelli.hackday-environ-manager.project-management.views/project-edit-form","project-fields","with-let71310","init71311","res71312","p1__71309#","jelli.hackday-environ-manager.forms/data-driven-form","jelli.hackday-environ-manager.project-management.views/project-edit-page","selected-project","cljs.core/chunk-first"],"sourcesContent":["(ns jelli.hackday-environ-manager.project-management.views\n  (:require [jelli.hackday-environ-manager.db :as db]\n            [reagent.core :as reagent]\n            [re-frame.core :as re-frame]\n            [jelli.hackday-environ-manager.simple-interop :as sint :refer [new-tab-href]]\n            [jelli.hackday-environ-manager.subs :as subs]\n            [jelli.hackday-environ-manager.events :as events]\n            [jelli.hackday-environ-manager.forms :as forms]))\n\n(defn project-deploy-link [project]\n  (let [deployable-project-keys (re-frame/subscribe [::subs/deployable-project-keys])]\n    (when (contains? (set @deployable-project-keys) project)\n      [:a\n       {:on-click #(re-frame/dispatch [:navigate :routes/project-deployment\n                                       {:project project}])}\n       [:span.icon>i.mdi.mdi-cloud-upload]])))\n\n(defn project-env-links [env-keys project-datum]\n  [:table.table.is-narrow.is-hoverable\n   [:thead\n    [:tr [:th \"Env\"] [:th \"Link\"]]]\n   [:tbody\n    (for [[env base-link] (map (juxt identity #(db/get-link % project-datum)) env-keys)\n          :let [link (str base-link (:landing-endpoint project-datum \"\"))]]\n      ^{:key (str env \"-\" link)}\n      [:tr\n       [:td\n        [:span.tag env]]\n       [:td>a (new-tab-href link)\n        link\n        [:span.icon>i.mdi.mdi-open-in-new]]])]])\n\n(defn- matches-search? [term [project-key project-datum]]\n  (let [lower-term (clojure.string/lower-case term)]\n    (->> ((juxt :friendly-name :microservice-name) project-datum)\n         (cons (name project-key))\n         (remove nil?)\n         (map clojure.string/lower-case)\n         (some #(clojure.string/includes? % lower-term)))))\n\n(defn project-list-page []\n  (reagent/with-let [term (reagent/atom \"\")]\n    (let [project-data @(re-frame/subscribe [::subs/project-data])\n          filtered-projects (filter #(matches-search? @term %) project-data)]\n      [:div.content\n       [:div.field>div.control.has-icons-right\n        [:input.input {:on-change #(reset! term (sint/event->value %))\n                       :on-key-up #(reset! term (sint/event->value %))\n                       :type \"search\"\n                       :placeholder \"Search Projects\"}]\n        (when (clojure.string/blank? @term)\n          [:span.icon.is-right>i.mdi.mdi-magnify])\n        [:p.help {:class (if (zero? (count filtered-projects))\n                           \"is-danger\"\n                           \"is-success\")}\n         (count filtered-projects) \"/\" (count project-data) \" projects found\"]]\n       (doall\n        (for [[k data] filtered-projects]\n          ^{:key k}\n          [:div.card.block\n           [:div.card-header\n            [:p.card-header-title (:friendly-name data)\n             [:a {:on-click #(re-frame/dispatch [:navigate :routes/project-edit {:project k}])}\n              [:span.icon>i.mdi.mdi-pencil]]\n             [project-deploy-link k]]]\n           [:div.card-content\n            [project-env-links [\"prod\" \"stage\" \"dev\"] data]\n            [:label.label \"Metadata\"]\n            [:pre (.stringify js/JSON (clj->js data) nil \" \")]]]))\n       (when-not (clojure.string/blank? @term)\n         [:button.button.is-primary\n          {:on-click #(re-frame/dispatch [::events/create-project @term])}\n          [:span \"Track New Project \"\n           [:span.is-family-monospace @term]]\n          [:span.icon>i.mdi.mdi-plus]])])))\n\n(defn project-edit-form [project-key project-fields project-data]\n  (reagent/with-let [data (reagent/atom project-data)]\n    [:div.columns.container\n     [:div.column.is-half\n      [forms/data-driven-form {:field-defs project-fields\n                               :data-atom data\n                               :on-submit #(re-frame/dispatch [::events/update-project-def project-key %])}]]\n     [:div.column.is-half\n      [:p.title (:friendly-name @data)]\n      [:div.box\n       [project-env-links [\"prod\" \"stage\" \"int\" \"dev\" \"play1\"] @data]]]]))\n\n(defn project-edit-page []\n  (let [selected-project (re-frame/subscribe [::subs/selected-project])\n        project-fields (re-frame/subscribe [::subs/project-fields])\n        project-data (re-frame/subscribe [::subs/selected-project-data])]\n    [:div.panel\n     [:div.panel-heading (:friendly-name @project-data)\n      [project-deploy-link @selected-project]]\n     (when @selected-project\n       [:div.panel-block\n        [project-edit-form @selected-project @project-fields @project-data]])]))\n"]}