{"version":3,"sources":["jelli/hackday_environ_manager/subs.cljs"],"mappings":"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","names":["re_frame.core.reg_sub","db","environments","cljs.core.map","p__63071","p__63073","vec__63079","cljs.core.nth","vec__63082","selected-environment","version-data","_","project-key","cljs.core.get_in","p__63086","vec__63087","env-key","p__63091","vec__63092","environment","p__63100","vec__63101","links","play-selected?","medley.core/remove-vals","p__63112","vec__63113","data","project","cljs.core.assoc","cljs.core.get","p__63117","vec__63118","project-data","link-overrides","jelli.hackday-environ-manager.db/->env-links","medley.core/filter-vals","p1__63122#","or__4212__auto__","deployable-projects","cljs.core/keys","jelli.hackday-environ-manager.subs/semver->vernums","semver-str","cljs.core/re-find","cljs.core/rest","cljs.core.mapv","js/parseInt","jelli.hackday-environ-manager.subs/semver-sort","a","b","p1__63125#","cljs.core/every?","cljs.core/re-matches","cljs.core/compare","cljs.core.conj","p__63134","vec__63135","p1__63133#","medley.core.map_vals","cljs.core/vals","cljs.core.remove","cljs.core/nil?","cljs.core.into","cljs.core.sort"],"sourcesContent":["(ns jelli.hackday-environ-manager.subs\n  (:require\n   [clojure.string]\n   [medley.core :as medley]\n   [re-frame.core :as re-frame]\n   [jelli.hackday-environ-manager.db :as db]))\n\n(re-frame/reg-sub\n ::name\n (fn [db]\n   (:name db)))\n\n(re-frame/reg-sub\n ::environments\n (fn [db]\n   (:environments db)))\n\n(re-frame/reg-sub\n ::env-keys\n :<- [::environments]\n (fn [environments]\n   (map :key environments)))\n\n(re-frame/reg-sub\n ::selected-environment\n (fn [db]\n   (:env-dashboard/current-environment db)))\n\n(re-frame/reg-sub\n ::selected-project\n (fn [db]\n   (:project-edit/selected-project db)))\n\n(re-frame/reg-sub\n ::version-data\n (fn [db]\n   (:version-data db)))\n\n(re-frame/reg-sub\n ::backend-version\n :<- [::selected-environment]\n :<- [::version-data]\n (fn [[selected-environment version-data] [_ project-key]]\n   (get-in version-data [(:key selected-environment) project-key] \"?\")))\n\n(re-frame/reg-sub\n ::deployed-version\n :<- [::version-data]\n (fn [version-data [_ env-key project-key]]\n   (get-in version-data [env-key project-key] \"?\")))\n\n(re-frame/reg-sub\n ::project-friendly-name\n (fn [db [_ project-key]]\n   (get-in db [:project-data project-key :friendly-name] project-key)))\n\n(re-frame/reg-sub\n ::selected-environment-name\n :<- [::selected-environment]\n (fn [environment]\n   (:friendly-name environment)))\n\n(re-frame/reg-sub\n ::playground-selected?\n :<- [::selected-environment]\n (fn [environment]\n   (:playground? environment)))\n\n(re-frame/reg-sub\n ::all-techops-links\n (fn [db]\n   (:techops-links db)))\n\n(re-frame/reg-sub\n ::visible-techops-links\n :<- [::all-techops-links]\n :<- [::playground-selected?]\n (fn [[links play-selected?]]\n   (if play-selected?\n     links\n     (medley/remove-vals :playground-only? links))))\n\n(re-frame/reg-sub\n ::link-overrides\n (fn [db]\n   (:env-dashboard/link-overrides db)))\n\n(re-frame/reg-sub\n ::project-data\n (fn [db]\n   (:project-data db)))\n\n(re-frame/reg-sub\n ::project-fields\n (fn [db]\n   (:project-fields db)))\n\n(re-frame/reg-sub\n ::selected-project-data\n :<- [::project-data]\n :<- [::selected-project]\n (fn [[data project]]\n   (assoc (get data project) :key project)))\n\n(re-frame/reg-sub\n ::environment-links\n :<- [::selected-environment]\n :<- [::project-data]\n :<- [::link-overrides]\n (fn [[environment project-data link-overrides]]\n   (db/->env-links {:environment environment\n                    :project-data (medley/filter-vals :env-dashboard? project-data)})))\n\n(re-frame/reg-sub\n ::deployable-projects\n :<- [::project-data]\n (fn [project-data]\n   (medley/filter-vals #(or (:microservice-name %)\n                            (:deployment/non-play-job %)\n                            (:deployment/play-job %))\n                       project-data)))\n\n(re-frame/reg-sub\n ::deployable-project-keys\n :<- [::deployable-projects]\n (fn [deployable-projects]\n   (keys deployable-projects)))\n\n(defn- semver->vernums [semver-str]\n  (->> semver-str\n       (re-find #\"(\\d+)\\.(\\d+)\\.(\\d+)-?.*\")\n       rest\n       (mapv js/parseInt)))\n\n(defn- semver-sort [a b]\n  (if (every? #(re-matches #\"\\d+\\.\\d+\\.\\d+-?.*\" %) [a b])\n    ;;Descending order for version nums, ascending for final tags\n    (compare (conj (semver->vernums b) a)\n             (conj (semver->vernums a) b))\n    (compare b a)))\n\n(re-frame/reg-sub\n ::known-versions\n :<- [::version-data]\n (fn [version-data [_ project-key]]\n   (->> version-data\n        (medley/map-vals #(get % project-key))\n        vals\n        (remove #{:error})\n        (remove nil?)\n        (into #{})\n        (sort semver-sort))))\n\n(comment\n  (sort semver-sort\n           [\"1.0.0\" \"1.1.0\" \"0.1.0\" \"0.10.0\" \"0.2.0\" \"1.3.0\" \"1.27.0\" \"1.1.0-development-SNAPSHOT\"])\n\n  @(re-frame/subscribe [::version-data])\n  @(re-frame/subscribe [::known-versions :phoenix]))\n"]}