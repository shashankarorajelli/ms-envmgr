{"version":3,"sources":["jelli/hackday_environ_manager/db.cljs"],"mappings":"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","names":["jelli.hackday-environ-manager.db/default-version-data","jelli.hackday-environ-manager.db/default-project-data","jelli.hackday-environ-manager.db/project-field-defs","jelli.hackday-environ-manager.db/default-db","cljs.core.concat","p1__63056#","cljs.core.map","cljs.core/PersistentHashMap","cljs.core.range","jelli.hackday-environ-manager.db/deployable-projects","project-data","p1__63057#","medley.core/filter-vals","or__4212__auto__","p__63058","map__63059","cljs.core/--destructure-map","cljs.core.get","jelli.hackday-environ-manager.db/get-link","env-key","default-link-pattern","link-overrides","clojure.string/replace","p__63060","map__63061","jelli.hackday-environ-manager.db/->env-links","environment","medley.core.map_vals","cljs.core.partial","jelli.hackday-environ-manager.db/links->endpoints","links","endpoint-key","medley.core/map-kv-vals","key","val","temp__5753__auto__","endpoint","cljs.core.get_in","cljs.core/some?","jelli.hackday-environ-manager.db/links->version-endpoints"],"sourcesContent":["(ns jelli.hackday-environ-manager.db\n  (:require [medley.core :as medley]))\n\n(def default-version-data\n  {\"dev\" {\"AdBuilder\" \"?\"}})\n\n(def default-project-data\n  {:ad-builder {:backend-version-endpoint \"api/v1/system/info\"\n                :default-link-pattern \"https://spearmint.ENVIRONMENT.jelli.com/\"\n                :link-overrides {\"prod\" \"https://spearmint.jelli.com/\"}\n                :friendly-name \"AdBuilder\"\n                :env-dashboard? true}\n   :radio-spot {:backend-version-endpoint \"api/system/version\"\n                :default-link-pattern \"https://radiospot.ENVIRONMENT.jelli.com/\"\n                :link-overrides {\"prod\" \"https://radiospot.jelli.com/\"}\n                :friendly-name \"RadioSpot\"\n                :env-dashboard? true}\n   :accounts {:backend-version-endpoint \"api/system/version\"\n              :default-link-pattern \"https://accounts.ENVIRONMENT.jelli.com/\"\n              :link-overrides {\"prod\" \"https://accounts.jelli.com/\"}\n              :friendly-name \"Enterprise Apps\"\n              :env-dashboard? true}\n   :mcc {:default-link-pattern \"https://mcc.ENVIRONMENT.jelli.com/\"\n         :link-overrides {\"prod\" \"https://mcc.jelli.com/\"}\n         :env-dashboard? true\n         :friendly-name \"MCC\"}\n   :admin2 {:default-link-pattern \"https://admin.ENVIRONMENT.jelli.com/\"\n            :link-overrides {\"prod\" \"https://admin.jelli.com/\"}\n            :landing-endpoyt \"admin2\"\n            :env-dashboard? true\n            :friendly-name \"Admin2\"}\n   :phoenix {:deployment/non-play-job \"https://jenkins-1.ci.jelli.net/view/juggernaut-be/job/Phoenix%20Deploy/\"\n             :default-link-pattern \"https://api.ENVIRONMENT.jelli.com/\"\n             :link-overrides {\"prod\" \"https://api.jelli.com/\"}\n             :landing-endpoint \"api/swagger/\"\n             :friendly-name \"Phoenix\"\n             :backend-version-endpoint \"api/system/version\"}\n   :spearmint {:deployment/non-play-job \"https://jenkins-1.ci.jelli.net/view/All/job/Spearmint%20Deploy/\"\n               :default-link-pattern \"https://spearmint.ENVIRONMENT.jelli.com/\"\n               :link-overrides {\"prod\" \"https://spearmint.jelli.com/\"}\n               :landing-endpoint \"api/swagger\"\n               :friendly-name \"Spearmint\"\n               :backend-version-endpoint \"api/v1/system/info\"}\n   :dsr {:default-link-pattern \"http://ENVIRONMENT-xapi.play.us-west-2.jelli.net/dsr/\"\n         :link-overrides {\"prod\" \"https://xapi.jelli.com/dsr/\"\n                          \"dev\" \"https://xapi.dev.jelli.com/dsr/\"\n                          \"stage\" \"https://xapi.stage.jelli.com/dsr/\"\n                          \"int\" \"https://xapi.int.jelli.com/dsr/\"}\n         :landing-endpoint \"\"\n         :env-dashboard? true\n         :microservice-name \"ms-data-service-reader\"\n         :friendly-name \"Data Service Reader\"}})\n\n(def project-field-defs\n  [{:key :friendly-name\n    :name \"Display Name\"\n    :type :fields/string}\n   {:key :env-dashboard?\n    :name \"Display on Environment Dashboard?\"\n    :type :fields/bool}\n   {:key :default-link-pattern\n    :name \"Default Link Pattern\"\n    :type :fields/env-url}\n   {:key :link-overrides\n    :name \"Link Overrides\"\n    :type :fields/env-url-map}\n   {:key :backend-version-endpoint\n    :name \"(Backend) Version Endpoint\"\n    :type :fields/string}\n   {:key :landing-endpoint\n    :name \"Landing Endpoint\"\n    :type :fields/string}\n   {:key :deployment/non-play-job\n    :name \"Jenkins Job for non-microservice deploys (non-play)\"\n    :type :fields/url}\n   {:key :microservice-name\n    :name \"Microservice name as defined in ms-config-store\"\n    :type :fields/string}])\n   \n\n(def default-db\n  {:name \"re-frame\"\n   :project-fields project-field-defs\n   :environments (concat [{:key \"dev\" :friendly-name \"Dev\"}\n                          {:key \"stage\" :friendly-name \"Staging\"}\n                          {:key \"prod\" :friendly-name \"Production\"}\n                          {:key \"int\" :friendly-name \"Integration\"}]\n                         (map #(hash-map :key (str \"play\" %)\n                                         :friendly-name (str \"Play \" %)\n                                         :playground? true)\n                              (range 1 10)))\n   :techops-links {:monitoring-confluence {:link \"https://gojelli.atlassian.net/wiki/spaces/TO/pages/1477050369/Tools\"\n                                           :friendly-name \"Monitoring Tools\"\n                                           :description \"Confluence page with links and credential explanations for many tools\"}\n                   :redash {:link \"https://redash.jelli.net/queries\"\n                            :friendly-name \"Redash Queries\"\n                            :description \"Dashboardable and alertable SQL access\"}\n                   :jenkins {:link \"https://jenkins-1.ci.jelli.net/view/juggernaut-be/\"\n                             :friendly-name \"Jenkins\"\n                             :description \"Continuous Integration and Deployment\"}\n                   :ssh-config {:link \"https://gojelli.atlassian.net/wiki/spaces/DEV/pages/486637760/SSH+Config\"\n                                :friendly-name \"SSH Config\"\n                                :description \"Shared SSH Config from confluence, see VPC Architecture link inside for proxy settings\"}\n                   :playlego {:link \"https://playlego.jelli.net/\"\n                              :friendly-name \"Playground Jenkins\"\n                              :description \"A bunch of jenkins jobs for managing play environments\"\n                              :playground-only? true}}\n   :project-data {}\n   :version-data default-version-data\n   :env-dashboard/current-environment {:key \"dev\" :friendly-name \"Dev\"}})\n\n(defn deployable-projects [project-data]\n  (medley/filter-vals #(or (:microservice-name %)\n                           (:deployment/non-play-job %)\n                           (:deployment/play-job %))\n                      project-data))\n\n(defn get-link [env-key {:keys [default-link-pattern link-overrides]}]\n  (or (get link-overrides env-key)\n      (clojure.string/replace (or default-link-pattern \"\")\n                              #\"ENVIRONMENT\" env-key)))\n\n(defn ->env-links [{:keys [environment project-data]}]\n  (let [env-key (:key environment)]\n    (medley/map-vals (partial get-link env-key) project-data)))\n\n(defn links->endpoints [links project-data endpoint-key]\n  (->> links\n       (medley/map-kv-vals (fn [key val]\n                             (when-let [endpoint (get-in project-data [key endpoint-key])]\n                               (str val endpoint))))\n       (medley/filter-vals some?)))\n\n(defn links->version-endpoints [links project-data]\n  (links->endpoints links project-data :backend-version-endpoint))\n\n(comment\n  (->env-links {:environment (:env-dashboard/current-environment default-db)\n                :project-data (:project-data default-db)})\n\n  (links->version-endpoints (->env-links {:environment (:env-dashboard/current-environment default-db)\n                                          :project-data (:project-data default-db)})\n                            (:project-data default-db)))\n"]}