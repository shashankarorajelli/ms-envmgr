<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.jelli.platform.envmgr</groupId>
		<artifactId>ms-envmgr</artifactId>
		<version>1.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>client</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>

	<dependencies>
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>common</artifactId>
			<version>1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>service</artifactId>
			<version>1.0</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-multipart</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-jaxrs2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.10.3</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi.generator.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>openapi.yaml</inputSpec>
							<generatorName>java</generatorName>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<modelPackage>com.jelli.platform.envmgr.httpClient.model</modelPackage>
							<apiPackage>com.jelli.platform.envmgr.httpClient.api</apiPackage>
							<skipValidateSpec>true</skipValidateSpec>
							<addCompileSourceRoot>true</addCompileSourceRoot>
							<groupId>${project.groupId}</groupId>
							<artifactId>openapi-client</artifactId>
							<artifactVersion>${openapi.client.version}</artifactVersion>
							<configOptions>
								<GenerateOpenAPIMetadata>false</GenerateOpenAPIMetadata>
								<sourceFolder>src/main/java</sourceFolder>
								<dateLibrary>java8</dateLibrary>
							</configOptions>
							<library>jersey2</library>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<skip>${skipDocker}</skip>
					<skipRun>${skipITs}</skipRun>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<verbose>true</verbose>
					<images>
<!--						<image>-->
<!--							<alias>${jelli.docker.image.app.alias}</alias>-->
<!--							<name>${docker.service.name}</name>-->
<!--							<run>-->
<!--								<skip>${skipDockerAppImage}</skip>-->
<!--								<network>-->
<!--									<name>ms-envmgr-local</name>-->
<!--									<mode>custom</mode>-->
<!--								</network>-->
<!--								<dependsOn>-->
<!--									<container>${jelli.docker.image.mysqldb.alias}</container>-->
<!--									<container>${jelli.docker.image.kafka.alias}</container>-->
<!--								</dependsOn>-->
<!--								<ports>-->
<!--									<port>28888:28888</port>-->
<!--								</ports>-->
<!--								<log>-->
<!--									<file>${integration.test.log.dir}/ms-envmgr-app.log</file>-->
<!--								</log>-->
<!--								<env>-->
<!--									<MYSQL_ROOT_PASSWORD>password</MYSQL_ROOT_PASSWORD>-->
<!--								</env>-->
<!--								<wait>-->
<!--									&lt;!&ndash; Check for this URL to return a 200 return code .... &ndash;&gt;-->
<!--									<url>${integration.test.client.host}/system/healthcheck</url>-->
<!--									<time>120000</time>-->
<!--								</wait>-->
<!--							</run>-->
<!--						</image>-->
					</images>
				</configuration>
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>start</id>-->
<!--						<phase>pre-integration-test</phase>-->
<!--						<goals>-->
<!--							<goal>start</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>stop</id>-->
<!--						<phase>post-integration-test</phase>-->
<!--						<goals>-->
<!--							<goal>stop</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<configuration>
					<configFile>../eclipse-format.xml</configFile>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
